package com.master.chapter012;

/**
 * @author ColorXJH
 * @version 1.0
 * @description: 赫夫曼树
 * @date 2021/7/7 11:46
 */
public class HuffmanTreeTest {
    public static void main(String[] args) {

    }
}
//基本介绍
    //1：给定n个权值作为n个叶子节点，构造一颗二叉树，若该树的带权路径长度（wpl）达到最小，
        //称这样的二叉树为最优二叉树，也称赫夫曼树/霍夫曼树
    //2：赫夫曼树是带权路径长度最短的树，权值较大的节点离根很近
//赫夫曼树的几个重要概念和举例说明
    //1：路径和路径长度：在一棵树中，从一个节点往下可以达到的孩子或者孙子节点之间的通路，称为路径
        //通路中分支的数目称为路径长度，若规定根节点的层数为1，则从根节点到第L层节点的路径长度为L-1
    //2:节点的权及带权路径长度：若将树中节点赋给一个有着某种含义的数值，则整个数值称为该节点的权，
        //节点的带权路径长度为：从根节点到该节点之间的路径长度与该节点的权的乘积
    //3：树的带权路径长度：树的带权路径长度规定为所有叶子节点的带权路径长度之和，记作wpl
        //权值越大的节点离根节点越近的二叉树才是最优二叉树
    //4：wpl最小的数就是赫夫曼树
//例子如下：
        //              a                   a                      a
        //          b      c             13       b              7    b
        //       13   7   8  3                 8     c              3   c
        //                                         7    3              8 13
        //wpl=13*2+7*2+8*2+3*2=62   wpl=13*1+8*2+7*3=3*3=59   wpl=7*1=3*2+(8+13)*3=76
        //第二种树的wpl值最小，
