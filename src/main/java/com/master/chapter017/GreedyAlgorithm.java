package com.master.chapter017;

/**
 * @ClassName: GreedyAlgorithm 贪心算法
 * @Package: com.master.chapter017
 * @Description:
 * @Datetime: 2021/10/9 16:04
 * @author: ColorXJH
 */
public class GreedyAlgorithm {
    public static void main(String[] args) {

    }
}
//应用场景：集合覆盖问题
    //假设存在下面需要付费的广播台，以及广播台的信号可以覆盖的区域，如何选择最少的广播台，让所有的区域都可以接受到信号
        //广播台               覆盖区域
        //K1                    北京上海天津
        //K2                    广州北京深圳
        //K3                    成都上海杭州
        //K4                    上海天津
        //K5                    杭州大连
//贪心算法介绍
    //贪婪算法是指在对问题进行求解时，在每一步选择中都选择最好或者最优的选择，从而希望能够导致结果是最好或者最优的算法
    //贪婪算法所得到的结果不一定是最优的结果（有时候会是最优解），但是都是相对近似最优解的结果
//思路分析：如何找出覆盖所有地区的广播台的集合呢，使用穷举法实现，列出每个可能的广播台的集合，这被称为幂集，假设总的有n个广播台，则广播台
    //的组合共有2^n -1个，假设每秒可以计算10个子集，也会随着广播台数量变多而时间花费指数上升
    //2:使用贪心算法：效率高，目前并没有算法可以快速的计算得到准备的值，使用贪心算法，则可以得到非常接近的解，而且效率高，选择策略上
        //因为需要覆盖全部地区的最小集合
            //1:遍历所有的广播电台，找到一个覆盖了最多未覆盖地区的电台（此电台可能包含一些已经覆盖的地区，但是没有关系）
            //2：将这个电台加入到一个集合中（比如arraylist），想办法把该电台覆盖的地区在下次对比时去掉
            //3:重复第一步直到覆盖了全部的地区
    //一下为代码实现

