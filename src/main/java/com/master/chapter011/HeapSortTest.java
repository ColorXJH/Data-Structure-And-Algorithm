package com.master.chapter011;

/**
 * @author ColorXJH
 * @version 1.0
 * @description: 树结构的应用-堆排序
 * @date 2021/7/6 16:17
 */
public class HeapSortTest {
    public static void main(String[] args) {

    }
}

//堆排序
    //1：堆排序是利用“堆”这种数据结构设计的一种排序算法，堆排序是一种选择排序，它的最坏，最好，平均时间复杂度
        //均是O(nlogn),它也是不稳定的排序
    //2：堆是具有以下性质的完全二叉树：每个节点的值都大于或等于其左右孩子节点的值，称为大顶堆，注意：
        //没有要求节点的左孩子的值和右孩子的值的大小关系
    //3：每个节点的值都小于或等于其左右孩子节点的值，称为小顶堆
    //4：大顶堆实例如下：
            //                          60（0）
            //                  45（1）         40（2）
            //              20（3）  25（4）  35（5）  30（6）
            //            10（7） 15（8）
        //我们对堆中的节点按层进行编号，映射到数组就是如下样子
            //【50 45 40 20 25 35 30 10 15】
            //  0  1  2  3  4  5  6  7  8
        //大顶堆特点：array[i]>=array[2*i+1]&&array[i]>=array[2*i+2]
            //其中： i 对应第几个节点，i 从0开始编号

        //小顶堆实例如下
            //                             10（0）
            //                    20（1）               15（2）
            //              25（3）     50（4）   30（5）      40（6）
            //          35（7）  45（8）
            //小顶堆： array[i]<=array[2*i+1]&&array[i]<=array[2*i+2]
                //其中：i 对应第几个节点，从0开始编号
        //一般升序采用大顶堆，降序采用小顶堆