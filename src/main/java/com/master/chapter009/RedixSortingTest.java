package com.master.chapter009;

/**
 * @ClassName: RedixSortingTest
 * @Package: com.master.chapter009
 * @Description: 基数排序（桶排序）
 * @Datetime: 2021/6/29 19:57
 * @author: ColorXJH
 */
public class RedixSortingTest {
    public static void main(String[] args) {

    }
}

//基数排序算法介绍
    //1：基数排序redix-sort属于分配式排序，又称桶子法bucket-sort,顾名思义，他是通过键值的各个位置的值，将要排序的元素分配至某些
        //"桶"中，达到排序的作用
    //2:基数排序算法是属于稳定的排序，基数排序法的效率是高效稳定的排序算法
    //3：基数排序算法是桶排序算法的扩展
    //4:基数排序是1887年赫尔曼-何乐礼发明的，他是这样实现的：将整数按照位数切割成不同的数字，然后按照每个位数分别比较

//基本思想：
    //将所有带比较数值统一为同样的数位长度，数位较短的数前面补零，然后从最低位开始，依次进行依次排序。这样从最低位排序一直到最高位排序完成以后
        //数列就变成一个有序序列
    //看下图理解
    //[53 3 542 748 14 214]
        //第一轮排序：将每个元素的个位数取出，然后再看整个数应该放在哪个对应的桶（一个一维数组）
        //按照这个桶的顺序（一维数组的下标）依次取出数据，放回到原数组=》【542 53 3 14 214 748】
        //第二轮排序，将每个元素的十位放在桶中排序，依次取出数据=》【3 14 214 542 748 53】
        //第三轮。。。最后得出数据=》【3 14 53 214 748】
        //多少论取决于最大数的位数